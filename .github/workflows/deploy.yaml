name: Deploy

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    release:
        name: Release
        runs-on: ubuntu-24.04-arm
        permissions:
            contents: write
            issues: write
            pull-requests: write
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: useblacksmith/setup-node@v5.0.4
              with:
                  node-version: "20"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10 # Use latest compatible version with your project

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Semantic Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npx semantic-release

    build_image:
        needs: release
        permissions:
            contents: write
            packages: write
        runs-on: ubuntu-24.04-arm
        name: Build Docker image
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ref: main # Ensure we checkout the updated version

            - name: Setup Node.js
              uses: useblacksmith/setup-node@v5.0.4
              with:
                  node-version: "20"

            - name: Read version from package.json
              id: package-version
              run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Determine if pre-release
              id: prerelease_check
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  if [[ $VERSION == *"pre"* ]]; then
                    echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
                  else
                    echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
                  fi

            - name: Login to GitHub Container Registry
              id: docker_login
              run: |
                  echo ${{ secrets.GHCR_LOGIN }} | docker login ghcr.io -u doras-to-admin --password-stdin

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push multi-architecture Docker image
              id: docker_build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: |
                      ghcr.io/dorasto/spotify-overlay:latest
                      ghcr.io/dorasto/spotify-overlay:v${{ steps.package-version.outputs.VERSION }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Trigger Coolify deployment
              run: |
                  curl --request GET '${{ secrets.COOLIFY_SPOTIFY_OVERLAY_DEPLOY }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_DEPLOY_SPOTIFY_OVERLAY }}'
